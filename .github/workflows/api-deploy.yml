# Deploy API to Cloudflare Workers
# 
# Required GitHub Secrets:
# - CF_API_TOKEN: Cloudflare API token with Workers:Edit permissions
# - CF_ACCOUNT_ID: Your Cloudflare account ID
# - DATABASE_URL: PostgreSQL connection string (optional, for Prisma)
# 
# Optional GitHub Secrets:
# - AVWX_TOKEN: Aviation weather API token
# - MAPBOX_TOKEN: Mapbox API token for maps
# - OPENSKY_USERNAME: OpenSky Network username
# - OPENSKY_PASSWORD: OpenSky Network password
# - SENTRY_DSN: Sentry error tracking DSN
# - POSTHOG_KEY: PostHog analytics key
#
# To set secrets: Repository Settings ‚Üí Secrets and variables ‚Üí Actions

name: Deploy API (Cloudflare)

on:
  push:
    branches: [ main ]
    paths:
      - "apps/api/**"
      - "packages/**"
      - "pnpm-lock.yaml"
  workflow_dispatch:

env:
  # Environment variables for secrets (reduces validation warnings)
  # ‚ö†Ô∏è  IMPORTANT: GitHub Actions editor shows warnings for unset secrets - this is EXPECTED
  # These warnings disappear once secrets are configured in repository settings
  # 
  # Required secrets:
  CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
  CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
  DATABASE_URL: ${{ secrets.DATABASE_URL || '' }}
  
  # Optional secrets (warnings are normal until configured):
  AVWX_TOKEN: ${{ secrets.AVWX_TOKEN || '' }}           # Aviation weather data
  MAPBOX_TOKEN: ${{ secrets.MAPBOX_TOKEN || '' }}       # Map visualization
  OPENSKY_USERNAME: ${{ secrets.OPENSKY_USERNAME || '' }} # Live flight tracking
  OPENSKY_PASSWORD: ${{ secrets.OPENSKY_PASSWORD || '' }} # Live flight tracking
  SENTRY_DSN: ${{ secrets.SENTRY_DSN || '' }}           # Error monitoring
  POSTHOG_KEY: ${{ secrets.POSTHOG_KEY || '' }}         # Analytics

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Validate required secrets
        run: |
          echo "üîç Checking GitHub repository secrets..."
          echo "‚ö†Ô∏è  Note: GitHub Actions editor shows warnings for unset secrets - this is EXPECTED"
          echo "These warnings disappear once secrets are configured in repository settings"
          echo ""
          
          if [ -z "$CF_API_TOKEN" ]; then
            echo "‚ùå CF_API_TOKEN secret is required but not set"
            echo "üí° Add this secret to your GitHub repository settings"
            exit 1
          fi
          
          if [ -z "$CF_ACCOUNT_ID" ]; then
            echo "‚ùå CF_ACCOUNT_ID secret is required but not set"
            echo "üí° Add this secret to your GitHub repository settings"
            exit 1
          fi
          
          echo "‚úÖ Required secrets validated"
          echo "üìä Secret Status:"
          echo "  ‚Ä¢ CF_API_TOKEN: ‚úÖ Set"
          echo "  ‚Ä¢ CF_ACCOUNT_ID: ‚úÖ Set"
          echo "  ‚Ä¢ DATABASE_URL: ${DATABASE_URL:+‚úÖ Set}${DATABASE_URL:-‚è≥ Optional}"
          echo "  ‚Ä¢ AVWX_TOKEN: ${AVWX_TOKEN:+‚úÖ Set}${AVWX_TOKEN:-‚è≥ Optional}"
          echo "  ‚Ä¢ MAPBOX_TOKEN: ${MAPBOX_TOKEN:+‚úÖ Set}${MAPBOX_TOKEN:-‚è≥ Optional}"
          echo "  ‚Ä¢ OPENSKY_USERNAME: ${OPENSKY_USERNAME:+‚úÖ Set}${OPENSKY_USERNAME:-‚è≥ Optional}"
          echo "  ‚Ä¢ OPENSKY_PASSWORD: ${OPENSKY_PASSWORD:+‚úÖ Set}${OPENSKY_PASSWORD:-‚è≥ Optional}"
          echo "  ‚Ä¢ SENTRY_DSN: ${SENTRY_DSN:+‚úÖ Set}${SENTRY_DSN:-‚è≥ Optional}"
          echo "  ‚Ä¢ POSTHOG_KEY: ${POSTHOG_KEY:+‚úÖ Set}${POSTHOG_KEY:-‚è≥ Optional}"
        
      - name: Deploy with Wrangler
        run: npx wrangler deploy --config apps/api/wrangler.toml
          
      - name: Update deployment status
        if: success()
        run: echo "‚úÖ API deployed successfully to Cloudflare Workers"
        
      - name: Update deployment status
        if: failure()
        run: echo "‚ùå API deployment failed"