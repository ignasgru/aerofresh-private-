// PDF Report Generation System
// Generates professional aircraft reports and comparisons
export class PDFGenerator {
    // Generate aircraft report PDF
    async generateAircraftReport(data) {
        const pdfContent = this.createAircraftReportHTML(data);
        return this.convertHTMLToPDF(pdfContent);
    }
    // Create HTML content for aircraft report
    createAircraftReportHTML(data) {
        const riskColor = this.getRiskColor(data.summary.riskScore);
        const riskLabel = this.getRiskLabel(data.summary.riskScore);
        return `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="UTF-8">
        <title>Aircraft Report - ${data.tail}</title>
        <style>
          body { font-family: Arial, sans-serif; margin: 0; padding: 20px; color: #333; }
          .header { text-align: center; border-bottom: 2px solid #3B82F6; padding-bottom: 20px; margin-bottom: 30px; }
          .header h1 { color: #3B82F6; margin: 0; font-size: 28px; }
          .metrics { display: flex; justify-content: space-between; margin: 20px 0; }
          .metric { text-align: center; padding: 15px; border: 1px solid #E5E7EB; border-radius: 8px; flex: 1; margin: 0 5px; }
          .metric-value { font-size: 24px; font-weight: bold; color: #3B82F6; }
          .risk-badge { display: inline-block; padding: 5px 15px; border-radius: 20px; color: white; font-weight: bold; background-color: ${riskColor}; }
          .table { width: 100%; border-collapse: collapse; margin: 20px 0; }
          .table th, .table td { border: 1px solid #E5E7EB; padding: 12px; text-align: left; }
          .table th { background-color: #F9FAFB; font-weight: bold; }
        </style>
      </head>
      <body>
        <div class="header">
          <h1>Aircraft Report</h1>
          <p><strong>${data.tail}</strong> - ${data.make} ${data.model} (${data.year})</p>
          <p>Generated: ${data.generatedAt.toLocaleDateString()}</p>
        </div>

        <div class="metrics">
          <div class="metric">
            <div class="metric-value">${data.summary.regStatus}</div>
            <div>Registration Status</div>
          </div>
          <div class="metric">
            <div class="metric-value">${data.summary.ntsbAccidents}</div>
            <div>Accidents</div>
          </div>
          <div class="metric">
            <div class="metric-value">${data.summary.owners}</div>
            <div>Owners</div>
          </div>
          <div class="metric">
            <div class="metric-value">${data.summary.adOpenCount}</div>
            <div>Open ADs</div>
          </div>
        </div>

        <div style="text-align: center; margin: 20px 0;">
          <span class="risk-badge">Risk Score: ${data.summary.riskScore} (${riskLabel})</span>
        </div>

        <h2>Ownership History</h2>
        <table class="table">
          <thead>
            <tr>
              <th>Owner Name</th>
              <th>Type</th>
              <th>Location</th>
              <th>Start Date</th>
              <th>End Date</th>
            </tr>
          </thead>
          <tbody>
            ${data.owners.map(owner => `
              <tr>
                <td>${owner.name}</td>
                <td>${owner.type}</td>
                <td>${owner.state}, ${owner.country}</td>
                <td>${new Date(owner.startDate).toLocaleDateString()}</td>
                <td>${owner.endDate ? new Date(owner.endDate).toLocaleDateString() : 'Current'}</td>
              </tr>
            `).join('')}
          </tbody>
        </table>

        <h2>Risk Assessment</h2>
        <p><strong>Risk Level:</strong> ${riskLabel}</p>
        <p><strong>Risk Score:</strong> ${data.summary.riskScore}/100</p>
        <p><strong>Assessment:</strong> ${this.getRiskAssessment(data.summary.riskScore)}</p>

        <div style="margin-top: 40px; text-align: center; color: #666; font-size: 12px; border-top: 1px solid #E5E7EB; padding-top: 20px;">
          <p>This report was generated by ${data.generatedBy} on ${data.generatedAt.toLocaleDateString()}</p>
          <p>Data sources: FAA Registry, NTSB, AD Database</p>
        </div>
      </body>
      </html>
    `;
    }
    // Convert HTML to PDF (mock implementation)
    async convertHTMLToPDF(html) {
        // Mock PDF content - in production, use Puppeteer or jsPDF
        const mockPdfContent = `%PDF-1.4
1 0 obj
<<
/Type /Catalog
/Pages 2 0 R
>>
endobj
%%EOF`;
        return new TextEncoder().encode(mockPdfContent).buffer;
    }
    // Helper methods
    getRiskColor(score) {
        if (score >= 70)
            return '#DC2626'; // Red
        if (score >= 40)
            return '#D97706'; // Orange
        return '#059669'; // Green
    }
    getRiskLabel(score) {
        if (score >= 70)
            return 'High Risk';
        if (score >= 40)
            return 'Medium Risk';
        return 'Low Risk';
    }
    getRiskAssessment(score) {
        if (score >= 70)
            return 'This aircraft has a high risk score due to multiple accidents or open ADs.';
        if (score >= 40)
            return 'This aircraft has a moderate risk score. Review safety history.';
        return 'This aircraft has a low risk score and appears to be in good condition.';
    }
}
